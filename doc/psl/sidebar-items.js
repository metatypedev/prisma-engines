initSidebarItems({"fn":[["is_reserved_type_name","Is this a valid type name for the Prisma client API?"],["parse_configuration","Loads all configuration blocks from a datamodel using the built-in source definitions."],["parse_datamodel","Parses and validates a datamodel string, using core attributes only."],["parse_schema","Parse and validate the whole schema"],["parse_schema_ast",""],["parse_schema_parserdb",""],["reformat","Returns either the reformatted schema, or the original input if we canâ€™t reformat. This happens if and only if the source does not parse to a well formed AST."],["render_datamodel_and_config_to_string","Renders a datamodel, sources and generators."],["render_datamodel_to_string","Renders the datamodel without configuration blocks."]],"mod":[["builtin_connectors",""],["common","This module contains shared constants and logic that can be used by engines."],["datamodel_connector","The interface implemented by connectors for Prisma schema validation and interpretation."],["diagnostics",""],["dml","This module contains the models representing the Datamodel part of a Prisma schema. It contains the main data structures that the engines can build upon."],["mcf","`mcf`: Turns a collection of `configuration::Datasource` and `configuration::Generator` into a JSON representation."]],"struct":[["Configuration",""],["Datasource","a `datasource` from the prisma schema."],["Generator",""],["StringFromEnvVar","Either an env var or a string literal."],["Validated",""],["ValidatedSchema",""]],"type":[["ValidatedConfiguration",""],["ValidatedDatamodel",""]]});